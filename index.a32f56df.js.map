{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,aAEzC,EAAW,SAAC,CAAlB,EACE,IAAM,EAAY,AAAU,IAAV,GAAe,AAAU,IAAV,EAEjC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,UAE7C,AAAI,EAEA,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,QAAS,KAG7B,EAAM,aAAa,CAAC,EAE/B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,aAAa,CAAC,SAAS,WAAW,CAAC,E,EACjE,EAEA,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAS,EACX,EACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var table = document.querySelector(\"table\");\n    var headers = table.querySelectorAll(\"th\");\n    var rows = Array.from(table.querySelectorAll(\"tbody tr\"));\n    var sortRows = function(index) {\n        var isNumeric = index === 2 || index === 3;\n        rows.sort(function(a, b) {\n            var cellA = a.cells[index].textContent.trim();\n            var cellB = b.cells[index].textContent.trim();\n            if (isNumeric) return parseFloat(cellA.replace(/[$,]/g, \"\")) - parseFloat(cellB.replace(/[$,]/g, \"\"));\n            else return cellA.localeCompare(cellB);\n        });\n        rows.forEach(function(row) {\n            return table.querySelector(\"tbody\").appendChild(row);\n        });\n    };\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            sortRows(index);\n        });\n    });\n});\n\n//# sourceMappingURL=index.a32f56df.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  const headers = table.querySelectorAll('th');\n  const rows = Array.from(table.querySelectorAll('tbody tr'));\n\n  const sortRows = (index) => {\n    const isNumeric = index === 2 || index === 3;\n\n    rows.sort((a, b) => {\n      const cellA = a.cells[index].textContent.trim();\n      const cellB = b.cells[index].textContent.trim();\n\n      if (isNumeric) {\n        return (\n          parseFloat(cellA.replace(/[$,]/g, '')) -\n          parseFloat(cellB.replace(/[$,]/g, ''))\n        );\n      } else {\n        return cellA.localeCompare(cellB);\n      }\n    });\n\n    rows.forEach((row) => table.querySelector('tbody').appendChild(row));\n  };\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      sortRows(index);\n    });\n  });\n});\n"],"names":["document","addEventListener","table","querySelector","headers","querySelectorAll","rows","Array","from","sortRows","index","isNumeric","sort","a","b","cellA","cells","textContent","trim","cellB","parseFloat","replace","localeCompare","forEach","row","appendChild","header"],"version":3,"file":"index.a32f56df.js.map"}